version: "3.7"

services:
  
  standard:
    image: bayrell/cloud_os_standard:0.3.0
    hostname: "{{.Service.Name}}.{{.Task.ID}}.local"
    volumes:
      - "standard_data:/data"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    env_file:
      - ./env.conf
    environment:
      MYSQL_DB: "cloud_os_standard"
    deploy:
      replicas: 1
      endpoint_mode: dnsrr
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 5s
      restart_policy:
        condition: "on-failure"
        delay: 10s
        window: 120s
      placement:
        constraints:
          - node.labels.name == docker0
    networks:
      - cloud_backend
    ports:
      - target: 80
        published: 8080
        protocol: tcp
        mode: host
      - target: 22
        published: 8022
        protocol: tcp
        mode: host      
    logging:
      driver: journald
	
  gateway:
    image: bayrell/bus_gateway:0.3.0
    hostname: "{{.Service.Name}}.{{.Task.ID}}.local"
    env_file:
      - ./env.conf
    deploy:
      replicas: 1
      endpoint_mode: dnsrr
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 5s
      restart_policy:
        condition: "on-failure"
        delay: 10s
        window: 120s
      placement:
        constraints:
          - node.labels.name == docker0
    networks:
      - cloud_backend
      - cloud_frontend
    logging:
      driver: journald
		
  rabbitmq:
    image: rabbitmq:3.8.9-management
    hostname: "{{.Service.Name}}.{{.Task.ID}}.local"
    volumes:
      - "rabbitmq_data:/var/lib/rabbitmq"
    deploy:
      replicas: 1
      endpoint_mode: dnsrr
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 5s
      restart_policy:
        condition: "on-failure"
        delay: 10s
        window: 120s
      placement:
        constraints:
          - node.labels.name == docker0
    networks:
      - cloud_backend
    logging:
      driver: journald
	
  http:
    image: bayrell/load_balancer_http:0.3.0
    hostname: "{{.Service.Name}}.{{.Task.ID}}.local"
    volumes:
      - "http_data:/data"
    env_file:
      - ./env.conf
    deploy:
      replicas: 1
      endpoint_mode: dnsrr
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 5s
      restart_policy:
        condition: "on-failure"
        delay: 10s
        window: 120s
      placement:
        constraints:
          - node.labels.name == docker0
    networks:
      - cloud_frontend
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
    logging:
      driver: journald    
    
volumes:
  rabbitmq_data:
  standard_data:
  http_data:

networks:
  cloud_backend:
    external: true
  cloud_frontend:
    external: true